// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
// #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 7>;
            then-layer = <7>;
        };

        apostrophe_right_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };

        semicolon_right_layer_dh {
            if-layers = <2 4>;
            then-layer = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        semicolon_toggle {
            bindings = <&tog 3>;
            key-positions = <0 9>;
            layers = <0 3>;
        };

        semicolon_toggle_dh {
            bindings = <&tog 2>;
            key-positions = <0 9>;
            layers = <1 2>;
        };

        colemak_toggle {
            bindings = <&tog 1>;
            key-positions = <20 29>;
            layers = <0 3 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W       &kp E        &kp R       &kp T        &kp Y     &kp U        &kp I        &kp O       &kp P
&ht LSHFT A  &ht LALT S  &ht LCTRL D  &ht LGUI F  &kp G        &kp H     &ht RGUI J   &ht RCTRL K  &ht RALT L  &ht RSHFT SQT
&kp Z        &kp X       &kp C        &kp V       &kp B        &kp N     &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                      &lt 6 TAB   &kp SPACE    &kp BSPC  &lt 4 ENTER
            >;
        };

        colemak_dh {
            bindings = <
&kp Q        &kp W       &kp F        &kp P            &kp B        &kp J     &kp L        &kp U        &kp Y       &kp SQT
&ht LSHFT A  &ht LALT R  &ht LCTRL S  &ht LEFT_META T  &kp G        &kp M     &ht RGUI N   &ht RCTRL E  &ht RALT I  &ht RSHFT O
&kp Z        &kp X       &kp C        &kp D            &kp V        &kp K     &kp H        &kp COMMA    &kp DOT     &kp FSLH
                                      &lt 6 TAB        &kp SPACE    &kp BSPC  &lt 4 ENTER
            >;
        };

        semicolon_dh {
            bindings = <
&kp Q        &kp W       &kp F        &kp P            &kp B        &kp J     &kp L        &kp U        &kp Y       &kp SEMICOLON
&ht LSHFT A  &ht LALT R  &ht LCTRL S  &ht LEFT_META T  &kp G        &kp M     &ht RGUI N   &ht RCTRL E  &ht RALT I  &ht RSHFT O
&kp Z        &kp X       &kp C        &kp D            &kp V        &kp K     &kp H        &kp COMMA    &kp DOT     &kp FSLH
                                      &lt 6 TAB        &kp SPACE    &kp BSPC  &lt 4 ENTER
            >;
        };

        semicolon {
            bindings = <
&kp Q        &kp W       &kp E        &kp R       &kp T        &kp Y     &kp U        &kp I        &kp O       &kp P
&ht LSHFT A  &ht LALT S  &ht LCTRL D  &ht LGUI F  &kp G        &kp H     &ht RGUI J   &ht RCTRL K  &ht RALT L  &ht RSHFT SEMI
&kp Z        &kp X       &kp C        &kp V       &kp B        &kp N     &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                      &lt 6 TAB   &kp SPACE    &kp BSPC  &lt 4 ENTER
            >;
        };

        right_layer {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans     &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        apostrophe_right_layer {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp DOUBLE_QUOTES
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp SINGLE_QUOTE
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans     &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans          &bt BT_SEL 0    &trans  &kp C_NEXT       &kp C_MUTE  &kp C_PREV         &sys_reset
&bootloader  &trans  &trans  &trans          &bt BT_SEL 1    &trans  &kp C_VOLUME_UP  &kp C_PP    &kp C_VOLUME_DOWN  &bootloader
&trans       &trans  &trans  &bt BT_CLR_ALL  &bt BT_SEL 2    &trans  &trans           &trans      &trans             &trans
                             &trans          &trans          &trans  &trans
            >;
        };
    };
};
